<?xml version="1.0"?>
<analyzerinfo checksum="2137132361">
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CVector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CVector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="11" column="2"/>
            <symbol>CVector</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CVector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CVector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="13" column="2"/>
            <symbol>CVector</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CGameMediator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CGameMediator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CGameMediator.h" line="25" column="2"/>
            <symbol>CGameMediator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CPowerParent&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CPowerParent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPowerParent.h" line="15" column="2"/>
            <symbol>CPowerParent</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;update&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;update&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CKeyInputManager.h" line="20" column="9" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CSTGInputManager.h" line="54" column="14" info="Virtual function in base class"/>
            <symbol>update</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;load&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;load&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CKeyInputManager.h" line="21" column="10" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CSTGInputManager.h" line="55" column="15" info="Virtual function in base class"/>
            <symbol>load</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Update&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Update&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CGameMediator.h" line="33" column="7" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\Scene_Abstract.h" line="12" column="15" info="Virtual function in base class"/>
            <symbol>Update</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Render&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Render&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CGameMediator.h" line="34" column="7" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\Scene_Abstract.h" line="13" column="15" info="Virtual function in base class"/>
            <symbol>Render</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;ApplyForceToMover&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;ApplyForceToMover&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPower_Line.h" line="15" column="10" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPower.h" line="14" column="15" info="Virtual function in base class"/>
            <symbol>ApplyForceToMover</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Update&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Update&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPower_Line.h" line="16" column="9" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPower.h" line="15" column="14" info="Virtual function in base class"/>
            <symbol>Update</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;Render&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;Render&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPower_Line.h" line="17" column="10" info="Function in derived class"/>
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPower.h" line="16" column="15" info="Virtual function in base class"/>
            <symbol>Render</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;r&apos; can be reduced." verbose="The scope of the variable &apos;r&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPowerParent.cpp" line="23" column="6"/>
            <symbol>r</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;v&apos; should be passed by const reference." verbose="Parameter &apos;v&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="18" column="35"/>
            <symbol>v</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;v&apos; should be passed by const reference." verbose="Parameter &apos;v&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="19" column="35"/>
            <symbol>v</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;v&apos; should be passed by const reference." verbose="Parameter &apos;v&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="20" column="36"/>
            <symbol>v</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;v&apos; should be passed by const reference." verbose="Parameter &apos;v&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="21" column="36"/>
            <symbol>v</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;v&apos; should be passed by const reference." verbose="Parameter &apos;v&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="27" column="27"/>
            <symbol>v</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;v&apos; should be passed by const reference." verbose="Parameter &apos;v&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CVector.h" line="28" column="29"/>
            <symbol>v</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;r&apos; is assigned a value that is never used." verbose="Variable &apos;r&apos; is assigned a value that is never used." cwe="563" file0="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.cpp">
            <location file="C:\Users\shoji\source\repos\PhisicsBullet\CPowerParent.cpp" line="23" column="8"/>
            <symbol>r</symbol>
        </error>
  <FileInfo check="Class">
<class name="CSTGInputManager::ConfigData" file="C:/Users/shoji/source/repos/PhisicsBullet/CSTGInputManager.h" line="15" col="2" hash="10039580688335671190"/>
<class name="Constant" file="C:/Users/shoji/source/repos/PhisicsBullet/Constant.h" line="2" col="1" hash="16261729683979875821"/>
<class name="CPowerParent" file="C:/Users/shoji/source/repos/PhisicsBullet/CPowerParent.h" line="9" col="1" hash="8860153068826703137"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="Add" lineNumber="9"/>
    <functiondecl functionName="ApplyForceToMover" lineNumber="14"/>
    <functiondecl functionName="Update" lineNumber="21"/>
    <functiondecl functionName="Render" lineNumber="38"/>
    <functioncall functionName="ApplyForceToMover"/>
    <functioncall functionName="CPowerParent"/>
    <functioncall functionName="CSTGInputManager"/>
    <functioncall functionName="CVector"/>
    <functioncall functionName="KEY_INPUT_A"/>
    <functioncall functionName="KEY_INPUT_C"/>
    <functioncall functionName="KEY_INPUT_D"/>
    <functioncall functionName="KEY_INPUT_ESCAPE"/>
    <functioncall functionName="KEY_INPUT_LCONTROL"/>
    <functioncall functionName="KEY_INPUT_LSHIFT"/>
    <functioncall functionName="KEY_INPUT_S"/>
    <functioncall functionName="KEY_INPUT_W"/>
    <functioncall functionName="KEY_INPUT_X"/>
    <functioncall functionName="KEY_INPUT_Z"/>
    <functioncall functionName="MV_BULLET"/>
    <functioncall functionName="MV_ENEMY"/>
    <functioncall functionName="MV_PLAYER"/>
    <functioncall functionName="MV_SHOT"/>
    <functioncall functionName="Render"/>
    <functioncall functionName="SK_A"/>
    <functioncall functionName="SK_B"/>
    <functioncall functionName="SK_C"/>
    <functioncall functionName="SK_DOWN"/>
    <functioncall functionName="SK_LEFT"/>
    <functioncall functionName="SK_RIGHT"/>
    <functioncall functionName="SK_SELECT"/>
    <functioncall functionName="SK_SLOW"/>
    <functioncall functionName="SK_START"/>
    <functioncall functionName="SK_UP"/>
    <functioncall functionName="Singleton &lt; CControllerFactory &gt;"/>
    <functioncall functionName="Update"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="break"/>
    <functioncall functionName="const"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="default"/>
    <functioncall functionName="double"/>
    <functioncall functionName="end"/>
    <functioncall functionName="erase"/>
    <functioncall functionName="for"/>
    <functioncall functionName="int"/>
    <functioncall functionName="itr"/>
    <functioncall functionName="load"/>
    <functioncall functionName="m"/>
    <functioncall functionName="med"/>
    <functioncall functionName="p"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="r"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="true"/>
  </FileInfo>
</analyzerinfo>
